{"version":3,"sources":["images/line.svg","images/profilePic.png","serviceWorker.js","styles/darkTheme.js","styles/lightTheme.js","styles/globalStyles.js","components/Button/Button.js","components/Title/Title.js","components/Hero/Hero.js","components/MainContent/MainContent.js","components/Emoji/Emoji.js","components/Toggle/Toggle.js","components/ThemeToggle/ThemeToggle.js","components/Footer/Footer.js","components/IconButton/IconButton.js","functions/sendEmail.js","components/Image/Image.js","components/ProfilePicture/ProfilePicture.js","App.js","hooks/useDarkMode.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","darkTheme","body","text","backgroundAccent","headerGradient","buttonGradient","hover","lightTheme","GlobalStyles","createGlobalStyle","theme","StyledButton","styled","button","Button","onClick","children","Title","testId","StyledTitle","data-testid","h1","Hero","HeaderBackground","Container","div","main","Line","svg","PageContent","MainContent","line","Emoji","symbol","label","className","role","aria-label","aria-hidden","CheckBoxWrapper","CheckBoxLabel","CheckBox","input","Toggle","handleToggle","id","value","type","checked","htmlFor","ThemeToggleWrapper","ToggleLabel","p","ThemeToggle","StyledFooter","footer","Footer","StyledIcon","a","props","icon","css","IconButton","href","target","rel","sendEmail","subject","encodeURIComponent","Image","StyledImage","defaultProps","height","width","img","ProfilePicture","App","localTheme","localStorage","getItem","useState","setTheme","componentMounted","setComponentMounted","setMode","mode","setItem","useEffect","themeType","matchMedia","matches","useDarkMode","toggleTheme","themeMode","isDarkMode","src","profilePic","console","log","library","add","fab","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ab92ee5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/line.1915c32e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profilePic.30505dd8.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const backgroundStart = '#2A3541';\nconst backgroundEnd = '#45525F';\n\nexport const darkTheme = {\n  body: backgroundEnd,\n  text: '#E9F0F8',\n  backgroundAccent: backgroundStart,\n  headerGradient: `linear-gradient(113.53deg, ${backgroundStart} 0%, rgba(57, 70, 83, 0) 86.04%)`,\n  buttonGradient: 'linear-gradient(270deg, #f58555 0%, #e67272 100%)',\n  hover: `\n  position: relative;\n  transition: all 0.1s ease-in;\n  top: 0;\n  &:hover {\n    top: -2px;\n    box-shadow: 0 1rem 1rem -0.5rem #0a0e13c4;\n  }\n  `,\n};\n\nexport default darkTheme;\n","const backgroundEnd = '#EBECF0';\nconst backgroundStart = '#FFFFFE';\n\nconst lightTheme = {\n  body: backgroundStart,\n  backgroundAccent: backgroundEnd,\n  text: '#45525F',\n  headerGradient: `linear-gradient(142.5deg, ${backgroundEnd} -0.86%, ${backgroundStart} 86.05%)`,\n  buttonGradient: 'linear-gradient(270deg, #f58555 0%, #e67272 100%)',\n  hover: `\n  position: relative;\n  transition: all 0.1s ease-in;\n  top: 0;\n  &:hover {\n    top: -2px;\n    box-shadow: 0 1rem 1rem -0.5rem #A9B2BB;\n  }\n  `,\n};\n\nexport default lightTheme;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  body, html {\n    align-items: center;\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    margin: 0;\n    font-size: 16px;\n    font-family: 'Lato', sans-serif;\n    padding: 0;\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n    @media (min-width: 1281px) {\n      font-size: 20px;\n    }\n  }\n  a {\n    color: ${({ theme }) => theme.text};\n    text-decoration: underline;\n  }\n  \n  `;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledButton = styled.button`\n  background-color: black;\n  background: ${({ theme }) => theme.buttonGradient};\n  color: white;\n  border-radius: 1.5rem;\n  appearance: none;\n  border: none;\n  line-height: 3rem;\n  min-width: 10rem;\n  font-weight: 700;\n  cursor: pointer;\n  font-size: 1rem;\n  ${({ theme }) => theme.hover}\n`;\n\nconst Button = ({ onClick, children }) => (\n  <StyledButton onClick={onClick}>{children}</StyledButton>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Title = ({ children, testId }) => (\n  <StyledTitle data-testid={testId}>{children}</StyledTitle>\n);\n\nTitle.propTypes = {\n  children: PropTypes.element.isRequired,\n  testId: PropTypes.string.isRequired,\n};\n\nexport default Title;\n\nconst StyledTitle = styled.h1`\n  font-family: Quicksand;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 4rem;\n  display: block;\n  margin: 0;\n  line-height: 5rem;\n  color: ${({ theme }) => theme.text};\n  @media (min-width: 768px) {\n    font-size: 6rem;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Hero = ({ children }) => (\n  <header>\n    <HeaderBackground>\n      <Container>{children}</Container>\n    </HeaderBackground>\n  </header>\n);\n\nHero.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Hero;\n\nconst Container = styled.div`\n  text-align: left;\n  transform: translateY(2rem);\n  padding: 0 1rem;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 0;\n  @media (min-width: 768px) {\n    transform: translateY(6rem);\n    margin: 0 auto;\n    flex-direction: row;\n    max-width: 1440px;\n  }\n`;\n\nconst HeaderBackground = styled.div`\n  min-height: 6rem;\n  margin-bottom: 3rem;\n  background: ${({ theme }) => theme.headerGradient};\n  @media (min-width: 768px) {\n    min-height: 9rem;\n    margin-bottom: 3rem;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport line from '../../images/line.svg';\n\nconst MainContent = ({ children }) => (\n  <Container>\n    <Line svg={line} />\n    <PageContent>{children}</PageContent>\n  </Container>\n);\n\nMainContent.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nconst Container = styled.main`\n  padding: 0 1rem;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 768px) {\n    margin: 0 auto;\n    flex-direction: row;\n    max-width: 1440px;\n  }\n`;\n\nconst Line = styled.div`\n  width: 6rem;\n  margin-top: 1.4rem;\n  margin-right: 1.5rem;\n  height: 10rem;\n  background-image: url(${({ svg }) => svg});\n  background-repeat: no-repeat;\n  background-position-x: center;\n  background-position-y: top;\n  display: none;\n  @media (min-width: 768px) {\n    display: block;\n  }\n`;\n\nconst PageContent = styled.div`\n  max-width: 30rem;\n`;\n\nexport default MainContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Emoji = ({ symbol, label }) => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={label || ''}\n    aria-hidden={label ? 'false' : 'true'}\n  >\n    {symbol}\n  </span>\n);\n\nEmoji.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default Emoji;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Toggle = ({ handleToggle, id, value }) => (\n  <CheckBoxWrapper>\n    <CheckBox id={id} type=\"checkbox\" onClick={handleToggle} checked={value} />\n    <CheckBoxLabel htmlFor={id} />\n  </CheckBoxWrapper>\n);\n\nToggle.propTypes = {\n  handleToggle: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  value: PropTypes.bool.isRequired,\n};\n\nconst CheckBoxWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n`;\nconst CheckBoxLabel = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 47px;\n  height: 30px;\n  border-radius: 15px;\n  border: 3px solid #e67272;\n  background-color: white;\n  cursor: pointer;\n  &::after {\n    content: '';\n    display: block;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    margin: 2px;\n    background: ${({ theme }) => theme.buttonGradient};\n    transition: 0.2s;\n  }\n`;\nconst CheckBox = styled.input`\n  opacity: 0;\n  z-index: 1;\n  border-radius: 15px;\n  width: 42px;\n  height: 26px;\n  &:checked + ${CheckBoxLabel} {\n    &::after {\n      content: '';\n      display: block;\n      border-radius: 50%;\n      width: 20px;\n      height: 20px;\n      background-color: #e67272;\n      margin-left: 19px;\n      transition: 0.2s;\n    }\n  }\n`;\n\nexport default Toggle;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Emoji from '../Emoji/Emoji';\nimport Toggle from '../Toggle/Toggle';\n\nconst ThemeToggle = ({ id, handleToggle, value }) => (\n  <ThemeToggleWrapper>\n    <ToggleLabel>\n      <Emoji label=\"Sun Emoji\" symbol=\"🌞\" />\n    </ToggleLabel>\n    <Toggle id={id} handleToggle={handleToggle} value={value} />\n    <ToggleLabel>\n      <Emoji label=\"Moon Emoji\" symbol=\"🌙\" />\n    </ToggleLabel>\n  </ThemeToggleWrapper>\n);\n\nThemeToggle.propTypes = {\n  id: PropTypes.string.isRequired,\n  handleToggle: PropTypes.func.isRequired,\n  value: PropTypes.bool.isRequired,\n};\n\nconst ThemeToggleWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst ToggleLabel = styled.p`\n  margin: 0 0.3rem;\n`;\n\nexport default ThemeToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Footer = ({ children }) => <StyledFooter>{children}</StyledFooter>;\n\nFooter.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nconst StyledFooter = styled.footer`\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0.5rem 1rem;\n  background-color: ${({ theme }) => theme.backgroundAccent};\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst IconButton = ({ icon, href }) => (\n  <StyledIcon href={href} icon={icon} target=\"_blank\" rel=\"noreferrer noopener\">\n    <FontAwesomeIcon icon={['fab', icon]} />\n  </StyledIcon>\n);\n\nIconButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  href: PropTypes.string.isRequired,\n};\n\nconst StyledIcon = styled.a`\n  line-height: 3rem;\n  width: 3rem;\n  height: 3rem;\n  text-align: center;\n  border-radius: 50%;\n  display: inline-block;\n  background-color: red;\n  color: white;\n  border: 1px solid black;\n  ${({ theme }) => theme.hover}\n  & + & {\n    margin-left: 0.5rem;\n  }\n  ${props =>\n    props.icon === 'github' &&\n    css`\n      background: white;\n      border-color: #ddd;\n      color: black;\n    `}\n  ${props =>\n    props.icon === 'twitter' &&\n    css`\n      background: #1da1f2;\n      border-color: #1da1f2;\n    `}\n    ${props =>\n      props.icon === 'linkedin' &&\n      css`\n        background: #007bb5;\n        border-color: #007bb5;\n      `}\n`;\n\nexport default IconButton;\n","const sendEmail = () => {\n  const to = 'me+enquires@daave.co.uk';\n  const subject = encodeURIComponent(\"Hi Dave, I'd like to get in touch!\");\n  const body = encodeURIComponent(`\nHi Dave,\n\nI'm writing to get in touch in regards to...\n\nAll the best,\n\nMy Name\n\n  `);\n\n  const url = `mailto:${to}?subject=${subject}&body=${body}`;\n\n  return url;\n};\n\nexport default sendEmail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Image = props => <StyledImage {...props} />;\n\nImage.propTypes = {\n  alt: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  height: PropTypes.string,\n  width: PropTypes.string,\n};\n\nImage.defaultProps = {\n  height: null,\n  width: null,\n};\n\nconst StyledImage = styled.img`\n  min-width: ${({ width }) => width};\n  min-height: ${({ height }) => height};\n  display: block;\n`;\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Image from '../Image/Image';\n\nconst ProfilePicture = props => <StyledImage {...props} />;\n\nProfilePicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nconst StyledImage = styled(Image)`\n  width: 4rem;\n  height: 4rem;\n  @media (min-width: 768px) {\n    width: 6rem;\n    height: 6rem;\n    margin-right: 1rem;\n  }\n`;\n\nexport default ProfilePicture;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles } from './styles';\nimport Button from './components/Button/Button';\nimport Title from './components/Title/Title';\nimport Hero from './components/Hero/Hero';\nimport MainContent from './components/MainContent/MainContent';\nimport { useDarkMode } from './hooks/useDarkMode';\nimport ThemeToggle from './components/ThemeToggle/ThemeToggle';\nimport Emoji from './components/Emoji/Emoji';\nimport profilePic from './images/profilePic.png';\nimport Footer from './components/Footer/Footer';\nimport IconButton from './components/IconButton/IconButton';\nimport sendEmail from './functions/sendEmail';\nimport ProfilePicture from './components/ProfilePicture/ProfilePicture';\n\nconst App = () => {\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  const handleToggle = () => {\n    if (theme === 'light') {\n      toggleTheme('dark');\n    } else {\n      toggleTheme('light');\n    }\n  };\n\n  const handleContact = () => {\n    console.log(sendEmail());\n    window.location.href = sendEmail();\n  };\n\n  const isDarkMode = theme === 'dark';\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles />\n        <Hero>\n          <ProfilePicture src={profilePic} />\n          <Title testId=\"title\">Ey 'up!</Title>\n        </Hero>\n        <MainContent>\n          <div>\n            <p>\n              I’m Dave, A quaint Yorkshireman living in Manchester. An\n              experienced <strong>Front End Developer</strong>, I’m passionate\n              about Javascript, Unit testing, UX and Accessability.\n            </p>\n            <p>\n              I’m currently part of a great team building great products at{' '}\n              <strong>Kaboodle</strong>.\n            </p>\n            <br />\n            <p>Always happy for a chat! Why not drop me a line?</p>\n            <Button onClick={handleContact}>\n              <Emoji label=\"Email icon\" symbol=\"📬\" /> Get In Touch\n            </Button>\n            <p>You can also find me here!</p>\n            <IconButton href=\"https://twitter.com/daaveuk/\" icon=\"twitter\" />\n            <IconButton\n              href=\"https://www.linkedin.com/in/daaveuk/\"\n              icon=\"linkedin\"\n            />\n            <IconButton href=\"https://github.com/daaveuk/\" icon=\"github\" />\n          </div>\n        </MainContent>\n        <Footer>\n          <ThemeToggle\n            id=\"themeToggle\"\n            handleToggle={handleToggle}\n            value={isDarkMode}\n          />\n          <span>\n            Made with <Emoji label=\"Love\" symbol=\"❤️\" /> by David Henderson.\n          </span>\n          <span>\n            <a\n              href=\"https://github.com/daaveuk/webpage\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              View the code here.\n            </a>\n          </span>\n        </Footer>\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const localTheme = window.localStorage.getItem('theme');\n  const [theme, setTheme] = useState(localTheme || 'light');\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  };\n\n  useEffect(() => {\n    let themeType = 'light';\n    if (localTheme) {\n      themeType = localTheme;\n    } else {\n      themeType =\n        window.matchMedia &&\n        window.matchMedia('(prefers-color-scheme: dark)').matches\n          ? 'light'\n          : 'dark';\n    }\n\n    setTheme(themeType);\n    setComponentMounted(true);\n  }, [localTheme]);\n\n  return [theme, toggleTheme, componentMounted];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nlibrary.add(fab);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}